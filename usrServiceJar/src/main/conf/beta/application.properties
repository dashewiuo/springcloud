server.port=8080

#TOMCAT\u90e8\u7f72\u65f6 \u4e0d\u80fd\u6709\u6b64\u914d\u7f6e
server.context-path=/userService

spring.application.name=user-coreService
#\u9632\u6b622\u4e2a\u5e94\u7528\u5728\u540c\u4e00\u4e2aTOMCAT\u62a5\u9519
spring.jmx.default-domain=user-coreService

spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

#\u5411eureka\u670d\u52a1\u6ce8\u518c\u4fe1\u606f\u65f6\uff0c\u4f7f\u7528ip\u5730\u5740\uff0c\u9ed8\u8ba4\u4f7f\u7528hostname  
eureka.instance.preferIpAddress=true  
#eureka.instance.hostname=${spring.cloud.client.ipAddress}

#tomcat\u4e0b\u7684\u4e0a\u4e0b\u6587+/info \u9700\u8981actuator
eureka.instance.status-page-url-path=userService/info
#\u9ed8\u8ba4\u503c\uff1a${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${server.port}},
#\u4e3b\u673a\u540d\uff1a\u5e94\u7528\u540d\uff1a\u5e94\u7528\u7aef\u53e3
eureka.instance.instanceId=${spring.application.name}:${spring.cloud.client.ipAddress}
#\u6307\u5b9a\u7eed\u7ea6\u66f4\u65b0\u9891\u7387\uff0c\u9ed8\u8ba4\u662f30s \u8868\u793aeureka client\u53d1\u9001\u5fc3\u8df3\u7ed9server\u7aef\u7684\u9891\u7387.\u5fc5\u987b\u5c0f\u4e8e\u670d\u52a1\u7aef\u5931\u6548\u65f6\u95f4
eureka.instance.lease-renewal-interval-in-seconds=5

#\u8bbe\u7f6e\u8fc7\u671f\u5254\u9664\u65f6\u95f4\uff0c\u9ed8\u8ba490s
eureka.instance.lease-expiration-duration-in-seconds=10

# info\u81ea\u5b9a\u4e49 \u8bbf\u95ee\u6b64\u8def\u5f84(eureka.instance.status-page-url-path)\u65f6\u8f93\u51fa\u7684JSON\u6570\u636e\u3002
#info.build.name=@project.name@
#info.build.description=@project.description@
#info.build.groupId=@project.groupId@
#info.build.artifact=@project.artifactId@
#info.build.version=@project.version@
info.build.name=11
info.build.description=12
info.build.groupId=123
info.build.artifact=123
info.build.version=1234

#\u8bbe\u7f6e\u62c9\u53d6\u670d\u52a1\u6ce8\u518c\u4fe1\u606f\u65f6\u95f4\uff0c\u9ed8\u8ba460s
eureka.client.registry-fetch-interval-seconds=30
# \u5f00\u542f\u5065\u5eb7\u68c0\u67e5\uff08\u4f9d\u8d56spring-boot-starter-actuator\uff09
eureka.client.healthcheck.enabled=false
#eureka\u7684\u5730\u5740\uff0c\u591a\u4e2aeureka\u670d\u52a1\u5730\u5740\uff0c\u53ef\u4ee5\u7528\uff0c\u53f7\u9694\u5f00
#eureka.client.serviceUrl.defaultZone=http://test:123456@eureka-service.group1.hfservice.com/eureka/
eureka.client.serviceUrl.defaultZone=http://192.168.160.31:1010/eureka/,http://192.168.160.195:1010/eureka/

#mybatis \u6574\u5408 xml\u914d\u7f6e\u65b9\u5f0f,ps\uff1a\u6ce8\u89e3\u65b9\u5f0fsql\u4e0d\u9700\u8981\u4e0b\u97622\u4e2a\u914d\u7f6e
mybatis.config-locations=classpath:mybatis/mybatis-configuration.xml
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml

#\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1aspring.datasource.type\u65e7\u7684spring boot\u7248\u672c\u662f\u4e0d\u80fd\u8bc6\u522b\u7684\u3002
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://192.168.160.195:3306/webuserdb?autoReconnect=true&autoReconnectForPools=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&useSSL=true
spring.datasource.username=root
spring.datasource.password=root
# \u4e0b\u9762\u4e3a\u8fde\u63a5\u6c60\u7684\u8865\u5145\u8bbe\u7f6e\uff0c\u5e94\u7528\u5230\u4e0a\u9762\u6240\u6709\u6570\u636e\u6e90\u4e2d
# \u521d\u59cb\u5316\u5927\u5c0f\uff0c\u6700\u5c0f\uff0c\u6700\u5927
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# \u914d\u7f6e\u83b7\u53d6\u8fde\u63a5\u7b49\u5f85\u8d85\u65f6\u7684\u65f6\u95f4
spring.datasource.maxWait=60000
# \u914d\u7f6e\u95f4\u9694\u591a\u4e45\u624d\u8fdb\u884c\u4e00\u6b21\u68c0\u6d4b\uff0c\u68c0\u6d4b\u9700\u8981\u5173\u95ed\u7684\u7a7a\u95f2\u8fde\u63a5\uff0c\u5355\u4f4d\u662f\u6beb\u79d2
spring.datasource.timeBetweenEvictionRunsMillis=60000
# \u914d\u7f6e\u4e00\u4e2a\u8fde\u63a5\u5728\u6c60\u4e2d\u6700\u5c0f\u751f\u5b58\u7684\u65f6\u95f4\uff0c\u5355\u4f4d\u662f\u6beb\u79d2
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# \u6253\u5f00PSCache\uff0c\u5e76\u4e14\u6307\u5b9a\u6bcf\u4e2a\u8fde\u63a5\u4e0aPSCache\u7684\u5927\u5c0f
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20

# \u914d\u7f6e\u76d1\u63a7\u7edf\u8ba1\u62e6\u622a\u7684filters\uff0c\u53bb\u6389\u540e\u76d1\u63a7\u754c\u9762sql\u65e0\u6cd5\u7edf\u8ba1\uff0c'wall'\u7528\u4e8e\u9632\u706b\u5899
spring.datasource.filters=stat,wall,log4j
# \u901a\u8fc7connectProperties\u5c5e\u6027\u6765\u6253\u5f00mergeSql\u529f\u80fd\uff1b\u6162SQL\u8bb0\u5f55
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

# \u5408\u5e76\u591a\u4e2aDruidDataSource\u7684\u76d1\u63a7\u6570\u636e
#spring.datasource.useGlobalDataSourceStat=true


